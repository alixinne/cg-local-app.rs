name: Release cg-local-app

on:
  push:
    tags: ['v*']

jobs:
  release:
    name: Release crate
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
        include:
          - target: x86_64-unknown-linux-gnu
            target_arch: x86_64
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            target_arch: x86_64
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Make output directory
        run: |
          mkdir -p ${{ github.workspace }}/target/dist

      - name: Build CLI binary
        run: cargo rustc --bin cg-local-app --target ${{ matrix.target }} --release

      - name: Strip CLI binary
        run: strip target/${{ matrix.target }}/release/cg-local-app
        if: matrix.os == 'ubuntu-latest'

      - name: Prepare release
        run: |
          RELEASE_NAME=$(git describe --tags --abbrev=0)
          (cd target/${{ matrix.target }}/release && tar czf ${{ github.workspace }}/target/dist/cg-local-app-$RELEASE_NAME-${{ matrix.target }}.tar.gz cg-local-app)
        if: matrix.os == 'ubuntu-latest'

      - name: Prepare release
        run: |
          $ReleaseName = & git describe --tags --abbrev=0
          cd target/${{ matrix.target }}/release
          7z a ${{ github.workspace }}/target/dist/cg-local-app-$ReleaseName-${{ matrix.target }}.7z cg-local-app.exe
        if: matrix.os == 'windows-latest'

      - name: Upload to GitHub release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: 'target/dist/*.{tar.gz,7z,whl,zip}'
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
